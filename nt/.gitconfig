# Global Git Config
# Vim: set ft=gitconfig:

[alias]
    # From: https://git-scm.com/book/en/v2/Git-Basics-Git-Aliase
    ci = commit
    co = checkout
    last = log -- HEAD $*
    unstage = reset HEAD -- $*

    # From varying Gists
    rel = rev-parse --show-prefix
    root = rev-parse --show-toplevel
    staged = diff --cached $*
    unstaged = diff $*

    # From: https://githowto.com/history
    # Run check git-log
    hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short $*

    # General.
    br = branch $*
    bra = branch -a
    cl =  clone
    cls= clone --depth 1
    d = diff
    dt = difftool
    f = fetch --all
    m = merge
    mt = mergetool
    s = status -sb
    r = remote -v

    # stashes
    sh = stash --all
    sha = stash apply
    shc = stash clear
    shd = stash drop
    shl = stash list
    shp = stash pop

    switch = !legit switch
    sync = !legit sync
    publish = !legit publish
    unpublish = !legit unpublish
    undo = !legit undo
    branches = !legit branches

[cola]
    spellcheck = true
    tabwidth = 4
    expandtab = true

[core]
    autocrlf=input
    eol=lf
    fscache = true
    # whoever set this to false what the fuck
    symlink = true

    # If true, Git will avoid using lstat() calls to detect if files have
    # changed by setting the "assume-unchanged" bit for those tracked files
    # which it has updated identically in both the index and working tree.

    # When files are modified outside of Git, the user will need to stage the
    # modified files explicitly (e.g. see Examples section in
    # git-update-index(1)). Git will not normally detect changes to those files.

    # This is useful on systems where lstat() calls are very slow, such as
    # CIFS/Microsoft Windows.

    # False by default.
    ignorestat = true

[credential]
    helper = manager

[credential "https://www.github.com"]
    username = farisachugthai

# If difftool settings havent been set, fall back to mergetool
[diff]
    prompt = false
    # detect copied files as well as renames. affects merge and status.rename
    renames = copy
    strategy-option = resolve
    # astextplain.textconv=astextplain

# [filter]
    # lfs.clean=git-lfs clean -- %f
    # lfs.process=git-lfs filter-process
    # lfs.required=true
    # lfs.smudge=git-lfs smudge -- %f

[gui]
    editor = nvim-qt.exe
    encoding = utf-8
    fontui = -family \"Fira Code\" -size 12 -weight normal -slant roman -underline 0 -overstrike 0
    fontdiff = -family \"Fira Code Light\" -size 12 -weight normal -slant roman -underline 0 -overstrike 0
    newbranchtemplate = nt
    tabsize = 4
    warndetachedcommit = true
	recentrepo = C:/Users/faris/projects/utilities
	recentrepo = C:/Users/faris/projects/dotfiles

[help]
    autocorrect = 1
	format = man
    format=html
    # yeah so apparently that messes up mingw64
    # format = browser

[html]
    sslbackend=openssl
    sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt

[merge]
    autoStash
    conflictstyle = diff3
    mergestyle = diff3
    prompt = false
    strategy-option = resolve
    tool = vimdiff
    summary = true

# this is from justinmk
# https://github.com/neovim/neovim/issues/2377
[mergetool "vimdiff"]
    cmd = nvim -d $BASE $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'
    # if it's not immediately clear what's going on, read up from this link:
    # http://blog.wuwon.id.au/2010/09/painless-merge-conflict-resolution-in.html
    # from this link we see that BASE is the commit that the file diverged at.
    # local and remote are the 2 paths we're trying to merge, and we can
    # determine which changes are necessary and what needs to be kept by
    # looking at those 4 buffers as a timeline

[pull]
    # When merges, pass the --rebase-merges option to git rebase so that the local merge commits are included in the rebase (see git-rebase(1) for details).
    rebase = merges

    # rebase = interactive
    # this forces every pull to require a no-op merge commit jesus christ

[push]
    default = simple

[rebase]
    stat = True

[sequence]
    editor = nvim

[status]
    showStash = True
    showUntrackedFiles = all

[user]
    email = farischugthai@gmail.com
    name = farisachugthai
[credential "https://source.developers.google.com"]
	helper = gcloud.cmd
