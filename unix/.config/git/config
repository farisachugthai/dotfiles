# Global Git Config

[user]
    email = farischugthai@gmail.com
    name = farisachugthai

[add]
    ignoreErrors

[apply]
    ignoreWhitespace = False  # don't fuck up the whitespace

[alias]
    # From: https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases
    ci = commit
    co = checkout
    last = log -1 HEAD
    unstage = reset HEAD --

    # From varying Gists
    rel = rev-parse --show-prefix
    root = rev-parse --show-toplevel
    staged = diff --cached
    unstaged = diff

    # From: https://githowto.com/history
    # Run check git-log
    hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short

    # General.
    a = add
    ar = add --renormalize -A
    b = branch
    bl = blame
    br = branch -a
    cia = commit --amend
    cid = commit --date=
    ciad = commit --amend --date=
    cl =  clone
    cls= clone --depth 1
    cob = checkout -b
    d = diff
    ds = diff --staged
    ds2 = diff --stat --staged
    dt = difftool
    f = fetch --all
    fe = fetch
    l = log
    lo = log --graph --decorate --abbrev-commit --branches --all --date=short --oneline
    ls = ls-tree -rl --abbrev master
    m = merge --no-ff
    ma = merge --abort
    mc = merge --continue
    mm = merge master
    mt = mergetool
    p = pull --all
    po = pull origin
    pom = pull origin master
    pu = push
    r = remote -v
    re = rebase
    rea = rebase --abort
    rec = rebase --continue
    rei = rebase -i
    s = status -s
    st = diff --stat
    t = tag --list

    # stashes
    sh = stash --all
    sha = stash apply
    shc = stash clear
    shd = stash drop
    shl = stash list
    shp = stash pop
    shs = stash show
    shsp = stash show --patch
	; switch = !legit switch
	; sync = !legit sync
	; publish = !legit publish
	; unpublish = !legit unpublish
	; undo = !legit undo
	; branches = !legit branches

    # May 27, 2019
    amend = commit --amend

    # from man git-alias. added '-msg' to make distinct from other last
    last-msg = cat-file commit HEAD

    rank = shortlog -sn --no-merges
    whatis = show -s --pretty=´tformat:%h (%s, %ad)´ --date=short
    whois = !sh -c ´git log -i -1 --pretty="format:%an <%ae>"

[branch]
    autosetupmerge = true

[checkout]
    # Jun 01, 2019: Automatically follow remote branches withe same name
    defaultRemote = origin

[cola]
    spellcheck = true
    tabwidth = 4
    expandtab = true
    boldheaders = true

[column]
    clean = never  # git shows files it's gonna wipe with git clean in columns and i hate it

[commit]
    verbose

[core]
    autocrlf = input
    excludesfile = "$HOME/.config/git/ignore"

    safecrlf = True

    # If true, Git will avoid using lstat() calls to detect if files have
    # changed by setting the "assume-unchanged" bit for those tracked files
    # which it has updated identically in both the index and working tree.

    # When files are modified outside of Git, the user will need to stage the
    # modified files explicitly (e.g. see Examples section in
    # git-update-index(1)). Git will not normally detect changes to those files.

    # This is useful on systems where lstat() calls are very slow, such as
    # CIFS/Microsoft Windows.

    # False by default.
    ignorestat = true
	compression = 5

[credential]
    helper = cache --timeout=86400

[credential "https://www.github.comm"]
    username = farisachugthai

[credential "https://source.developers.google.com"]
	helper = gcloud.cmd

# Man git-difftool: Line 85
# If difftool settings havent been set, fall back to mergetool
[diff]
    algorithm = patience
    autoRefreshIndex
    context = 0
    dirstat = files,10,cumulative
    mnemonicPrefix = true  # holy shit if this is real then this might be awesome
    prompt = false
    # detect copied files as well as renames. affects merge and status.renames
    strategy-option = resolve
    suppressBlankEmpty = true  # dude copy pastin is gonna be so much easy
    suppressBlankLines
    tool = nvimdiff
    word-diff = color
    wsErrorHighlight = all

[difftool]
    nvimdiff = nvim-qt.exe -d $LOCAL $REMOTE
    nvimdiff = nvim -d $LOCAL $REMOTE $BASE $MERGED -c '$wincmd w' -c 'wincmd J'
    prompt = false

[gc]
    auto = 3000   # the default is 6700 but that sounds really high

[grep]
    lineNumber = true
    extendedRegexp = true

[gui]
    editor = nvim-qt.exe
    editor = nvim
    cmd = nvim -d $LOCAL $REMOTE
    trustexitcode = true

[help]
    autocorrect = 1

[log]
    abbrevCommit = true
    showSignature = true

[merge]
    autoStash
    conflictstyle = diff3
    diffstat = true
    mergestyle = diff3
    prompt = false
    renames = true
    strategy-option = resolve
    summary = true
    tool = nvim-merge

# this is from justinmk
# https://github.com/neovim/neovim/issues/2377
[mergetool]
    nvim-merge = nvim-qt.exe -d $BASE $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'
    nvim-merge = nvim -d $BASE $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'
    # if it's not immediately clear what's going on, read up from this link:
    # http://blog.wuwon.id.au/2010/09/painless-merge-conflict-resolution-in.html
    # from this link we see that BASE is the commit that the file diverged at.
    # local and remote are the 2 paths we're trying to merge, and we can
    # determine which changes are necessary and what needs to be kept by
    # looking at those 4 buffers as a timeline
[pull]
    rebase

[push]
    default = simple

[rebase]
    autoStash = True
    stat = True
    missingCommitsCheck = "warn"  # jesus christ Git why are all your defaults destructive??

[ssh]
    variant = "ssh -p 8022 $*"

[status]
    branch = true
    displayCommentPrefix = True  # git comments out its own output for easier copy pasting!
    renames = copy
    showStash = True
    showUntrackedFiles = all
    submoduleSummary = true

[url "git://github.com"]
    insteadOf = g:
    name = farisachugthai

[url "git@gist.github.com"]
    insteadOf = "gist:"
    pushInsteadOf = "gist:"
